@{
    ViewData["Title"] = "Posts";
}

<h2>Posts (Redis & Dynamic UI)</h2>
<!-- Link to PostMemoryCaching Controller -->
<a href="@Url.Action("Index", "PostMemoryCaching")" class="btn btn-info">Go to Post Memory Caching</a>


<table class="table" id="postsTable">
    <thead>
        <tr>
            <th>User ID</th>
            <th>Title</th>
            <th>Body</th>
        </tr>
    </thead>
    <tbody>
      
    </tbody>
</table>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        fetch('/Post/GetPosts') 
            .then(response => {
                if (!response.ok) throw new Error('Network response was not ok');
                return response.json();
            })
            .then(posts => {
                const tbody = document.querySelector("#postsTable tbody");
                posts.forEach(post => {
                    const row = document.createElement("tr");
                    row.innerHTML = `
                        <td>${post.userId}</td>
                        <td>${post.title}</td>
                        <td>${post.body}</td>
                    `;
                    tbody.appendChild(row);
                });
            })
            .catch(error => {
                console.error("Failed to load posts:", error);
            });
    });
</script>



    